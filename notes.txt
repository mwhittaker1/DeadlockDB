todos.

Check DB tracker below {{are done}}

create player recency trends
transform_and_load_rolling_stats->calculate_player_match_recency()

create player_hero trends
orchestrators -> transform_and_load_player_hero_trends

insert all trends into player_trends and player_hero trends

refactor players_to_trend_from_db function.


{{
def create_matches_table(con):
    con.execute("""
    CREATE TABLE matches (
    match_id BIGINT,
    start_time TIMESTAMP,
    game_mode VARCHAR,
    match_mode VARCHAR,
    duration_s INTEGER,
    winning_team VARCHAR,
    PRIMARY KEY (match_id)
    )
    """)
}}
{{
def create_player_matches_table(con):
    con.execute("""
    CREATE TABLE player_matches (
    account_id BIGINT,
    match_id BIGINT,
    hero_id INTEGER,
    team VARCHAR,
    kills INTEGER,
    deaths INTEGER,
    assists INTEGER,
    denies INTEGER,
    net_worth BIGINT,
    PRIMARY KEY (account_id, match_id)
    )
    """)
}}

{{
def create_player_trends_table(con):
    CREATE TABLE player_trends 
    account_id BIGINT,
    p_average_kills FLOAT,
    p_average_deaths FLOAT,
    p_avg_kd FLOAT,
    p_total_matches BIGINT,
    p_win_rate FLOAT,
}}
                
{{    
    -- Player hero trends
    p_v_h_pick_pct FLOAT,
    p_v_h_win_pct FLOAT,
    p_v_h_kd_pct FLOAT
    }}

{{
    -- Win streaks
    win_streaks_avg FLOAT,
    win_streaks_2plus INTEGER,
    win_streaks_3plus INTEGER,
    win_streaks_4plus INTEGER,
    win_streaks_5plus INTEGER,

    -- Loss streaks
    loss_streaks_avg FLOAT,
    loss_streaks_2plus INTEGER,
    loss_streaks_3plus INTEGER,
    loss_streaks_4plus INTEGER,
    loss_streaks_5plus INTEGER,
}}
{{    
    p_win_streak_avg FLOAT,
    p_loss_streak_avg FLOAT,
    PRIMARY KEY (account_id)
 }}
{{
def create_player_rolling_stats(con):
    con.execute("""
    CREATE TABLE player_rolling_stats (
    account_id BIGINT,
    match_id BIGINT,
    start_time TIMESTAMP,
    p_win_pct_2 FLOAT,
    p_win_pct_3 FLOAT,
    p_win_pct_4 FLOAT,
    p_win_pct_5 FLOAT,
    p_loss_pct_2 FLOAT,
    p_loss_pct_3 FLOAT,
    p_loss_pct_4 FLOAT,
    p_loss_pct_5 FLOAT,
    PRIMARY KEY (account_id, match_id),
    FOREIGN KEY (account_id, match_id) REFERENCES player_matches(account_id, match_id)
}}
{{
def create_hero_trends_table(con):  
    con.execute
    CREATE TABLE hero_trends (
    hero_id INTEGER,
    trend_start_date DATE,
    trend_end_date DATE,
    trend_date DATE,
    trend_window_days INTEGER,
    pick_rate FLOAT,
    win_rate FLOAT,
    average_kills FLOAT,
    average_deaths FLOAT,
    average_assists FLOAT,
    average_kd FLOAT,
    PRIMARY KEY (hero_id, trend_start_date, trend_end_date, trend_window_days)
}}

